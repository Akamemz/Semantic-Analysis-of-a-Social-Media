{
    "topic": "healthcare",
    "source": "CNN (Web News)",
    "bias": 0,
    "url": "http://www.cnn.com/2013/10/14/opinion/bellovin-obamacare-glitches/index.html?hpt=po_t1",
    "title": "Why healthcare.gov has so many problems",
    "date": "2013-10-14",
    "authors": "Steven Bellovin, Special To Cnn",
    "content": "Story highlights The new insurance exchange site , HealthCare.gov , has technical problems\nSteven Bellovin : Large-scale software projects are hard ; glitches are common\nHe says testing for errors and changing requirements contribute to delays or failures\nBellovin : Good project management is a remarkably large part of the effort\nNo one should be surprised by the technical problems that have plagued the new health insurance exchange website , HealthCare.gov , which allows millions of Americans to sign up and buy health coverage .\nLarge-scale software projects are hard . Failures or delays in schedule , budget and functionality are so common as to almost be the norm , not the exception .\nSure , the website rollout could have been handled a lot better . With all the delays and warning signs , the government could have stopped touting HealthCare.gov and teasing the public with messages such as `` 5 days to open enrollment . Do n't wait another minute . ''\nMaybe it should have hired a general contractor to supervise the 55 contractors who worked on the website . Maybe it should have looked into launching at a later date instead of October 1 . But the bottom line is that technical glitches are an inescapable part of our digital life .\nWe see this in the private sector . When United Airlines and Continental Airlines merged , the combined reservation system did n't work very well at first . The new Terminal 5 at Heathrow Airport outside London was saddled with software problems . Nor are tech giants immune ; Windows Vista was very late because Microsoft had myriad troubles during development .\nJUST WATCHED Glitches continue with Obamacare site Replay More Videos ... MUST WATCH Glitches continue with Obamacare site 01:35\nJUST WATCHED Keeping Them Honest : Obamacare debacle Replay More Videos ... MUST WATCH Keeping Them Honest : Obamacare debacle 04:40\nThe inherent nature of software is that it demands perfection . Computers do exactly what they 're told to do . Even small errors can be disastrous . For example , one of the first American space probes to Venus was lost in part because of a single missing hyphen character in a program .\nTesting is the next hurdle . Any project needs adequate time to make sure the software works properly and to find and correct any flaws . Time , however , was in short supply with the launch of the online insurance marketplace . If development took too long , there would n't be enough time to test it thoroughly . That apparently was one of the problems . And even when all of the pieces are working fine , the entire system has to be tested ; that ca n't be done until quite late in the process .\nProject management also plays a big role . It 's very hard to estimate how long a project will take . That means it 's hard to know how many programmers to devote to the task , how much it will cost and so on . Measuring progress is n't easy , either , which means it 's hard to tell how far along you are .\nThe worst problem is probably that requirements change while the software is being developed . This may mean that you have to redo work you 've already done , but the effects can be more far-reaching . It 's like building a house : If the owners suddenly decide they want a big floor-to-ceiling picture window on the second floor , it may require rerouting water pipes . That may require moving the ground-floor bathroom , which in turn could affect the kitchen layout , because the bathtub and the kitchen sink share drain pipes . Part of project management 's job is to say `` no '' to many change requests , but that 's not always possible .\nWhat if more computers are added ? That 's not always a solution . If the computers have to share access to resources -- say , a database of people who have signed up -- it gets complicated . Suppose you 've invited many people over for dinner , more than you 've ever hosted before . You and your spouse decide to share the preparation and cooking . Maybe you have sufficient counter space , but you still have only one sink , one stove and one oven . With two people , it might be relatively straightforward to take turns , but with three or four or more cooks , it can get crazy .\nFinally , there 's the `` system integration '' problem of combining the different components . A system like the insurance exchanges is built in parts . Eventually , like a jigsaw puzzle , all the pieces have to be put together . Do the slots and tongues line up properly ? Are the right parts of the picture on the right pieces ? Did all of the contractors use the same shade of green for the grass ?\nThere are standard approaches , standard tools and standard software for building large-scale websites . Using them correctly takes good planning and management . That was in short supply here .\nThe contractors building HealthCare.gov could n't control the budget or the timing for the regulations ; those were the product of Washington politics . While there are apparent programming and design errors , it 's quite likely that most are the result of requirement changes rather than incompetence .\nThe overall failure appears to have been one of project management on the part of the government . In the best of all possible worlds , the site would have launched seamlessly to serve the entire nation . But software is hard . Inexperience does n't help . And politics just makes things messier .\nThe Obama administration is `` excruciatingly `` embarrassed and is working hard to get the glitches fixed . Let 's hope things go more smoothly the next time around .",
    "content_original": "Story highlights The new insurance exchange site, HealthCare.gov, has technical problems\n\nSteven Bellovin: Large-scale software projects are hard; glitches are common\n\nHe says testing for errors and changing requirements contribute to delays or failures\n\nBellovin: Good project management is a remarkably large part of the effort\n\nNo one should be surprised by the technical problems that have plagued the new health insurance exchange website, HealthCare.gov , which allows millions of Americans to sign up and buy health coverage.\n\nAngry, OK. Disappointed, of course. But surprised? Don't be.\n\nLarge-scale software projects are hard. Failures or delays in schedule, budget and functionality are so common as to almost be the norm, not the exception.\n\nSure, the website rollout could have been handled a lot better. With all the delays and warning signs, the government could have stopped touting HealthCare.gov and teasing the public with messages such as \"5 days to open enrollment. Don't wait another minute.\"\n\nSteven Bellovin\n\nMaybe it should have hired a general contractor to supervise the 55 contractors who worked on the website. Maybe it should have looked into launching at a later date instead of October 1. But the bottom line is that technical glitches are an inescapable part of our digital life.\n\nWe see this in the private sector. When United Airlines and Continental Airlines merged, the combined reservation system didn't work very well at first. The new Terminal 5 at Heathrow Airport outside London was saddled with software problems. Nor are tech giants immune; Windows Vista was very late because Microsoft had myriad troubles during development.\n\nJUST WATCHED Glitches continue with Obamacare site Replay More Videos ... MUST WATCH Glitches continue with Obamacare site 01:35\n\nJUST WATCHED Keeping Them Honest: Obamacare debacle Replay More Videos ... MUST WATCH Keeping Them Honest: Obamacare debacle 04:40\n\nThe inherent nature of software is that it demands perfection. Computers do exactly what they're told to do. Even small errors can be disastrous. For example, one of the first American space probes to Venus was lost in part because of a single missing hyphen character in a program.\n\nTesting is the next hurdle. Any project needs adequate time to make sure the software works properly and to find and correct any flaws. Time, however, was in short supply with the launch of the online insurance marketplace. If development took too long, there wouldn't be enough time to test it thoroughly. That apparently was one of the problems. And even when all of the pieces are working fine, the entire system has to be tested; that can't be done until quite late in the process.\n\nProject management also plays a big role. It's very hard to estimate how long a project will take. That means it's hard to know how many programmers to devote to the task, how much it will cost and so on. Measuring progress isn't easy, either, which means it's hard to tell how far along you are.\n\nThe worst problem is probably that requirements change while the software is being developed. This may mean that you have to redo work you've already done, but the effects can be more far-reaching. It's like building a house: If the owners suddenly decide they want a big floor-to-ceiling picture window on the second floor, it may require rerouting water pipes. That may require moving the ground-floor bathroom, which in turn could affect the kitchen layout, because the bathtub and the kitchen sink share drain pipes. Part of project management's job is to say \"no\" to many change requests, but that's not always possible.\n\nWhat if more computers are added? That's not always a solution. If the computers have to share access to resources -- say, a database of people who have signed up -- it gets complicated. Suppose you've invited many people over for dinner, more than you've ever hosted before. You and your spouse decide to share the preparation and cooking. Maybe you have sufficient counter space, but you still have only one sink, one stove and one oven. With two people, it might be relatively straightforward to take turns, but with three or four or more cooks, it can get crazy.\n\nFinally, there's the \"system integration\" problem of combining the different components. A system like the insurance exchanges is built in parts. Eventually, like a jigsaw puzzle, all the pieces have to be put together. Do the slots and tongues line up properly? Are the right parts of the picture on the right pieces? Did all of the contractors use the same shade of green for the grass?\n\nThere are standard approaches, standard tools and standard software for building large-scale websites. Using them correctly takes good planning and management. That was in short supply here.\n\nThe contractors building HealthCare.gov couldn't control the budget or the timing for the regulations; those were the product of Washington politics. While there are apparent programming and design errors, it's quite likely that most are the result of requirement changes rather than incompetence.\n\nThe overall failure appears to have been one of project management on the part of the government. In the best of all possible worlds, the site would have launched seamlessly to serve the entire nation. But software is hard. Inexperience doesn't help. And politics just makes things messier.\n\nThe Obama administration is \" excruciatingly \" embarrassed and is working hard to get the glitches fixed. Let's hope things go more smoothly the next time around.\n\nFollow us on Twitter @CNNOpinion.",
    "source_url": "www.cnn.com",
    "bias_text": "left",
    "ID": "twnInTzxJZ2wNdhS"
}